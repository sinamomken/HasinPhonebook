// <auto-generated />
using HasinPhonebook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HasinPhonebook.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HasinPhonebook.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HasinPhonebook.Entities.Phonebook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Phonebooks");
                });

            modelBuilder.Entity("HasinPhonebook.Entities.PhonebookItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ItemFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhonebookId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PhonebookId");

                    b.ToTable("PhonebookItems");
                });

            modelBuilder.Entity("HasinPhonebook.Entities.Phonebook", b =>
                {
                    b.HasOne("HasinPhonebook.Entities.Customer", "Customer")
                        .WithMany("Phonebooks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HasinPhonebook.Entities.PhonebookItem", b =>
                {
                    b.HasOne("HasinPhonebook.Entities.Phonebook", "Phonebook")
                        .WithMany("PhonebookItems")
                        .HasForeignKey("PhonebookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phonebook");
                });

            modelBuilder.Entity("HasinPhonebook.Entities.Customer", b =>
                {
                    b.Navigation("Phonebooks");
                });

            modelBuilder.Entity("HasinPhonebook.Entities.Phonebook", b =>
                {
                    b.Navigation("PhonebookItems");
                });
#pragma warning restore 612, 618
        }
    }
}
